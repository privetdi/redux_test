import React, { createElement } from "react";
import ReactDOM from "react-dom/client";
import App from "./App";

//createStore —Å–æ–∑–¥–∞–µ—Ç store
import { createStore } from "redux";

const testButton = document.querySelector(".testButton");
const items = document.querySelector(".testUl");

testButton.addEventListener("click", () => {
  const imputValue = document.querySelector(".testInput").value;
  store.dispatch({ type: "WRITE", payload: imputValue });
  console.log(
    "üöÄ ~ file: index.js:42 ~ start ~   store.getState()",
    store.getState()
  );
  document.querySelector(".testInput").value = "";
  /*   document.querySelector('.testInput').value = ""; */
});
//—Å–æ–∑–¥–∞—ë–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
const store = createStore(changeStore);
//–ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–æ—Ä–∞
store.subscribe(() => {
  items.innerHTML = "";

  store.getState().map((item) => {
    const li = document.createElement("li");
    li.textContent = item;

    items.appendChild(li);
  });
});

//–ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–æ—Ä–∞ –†–ï–î–¨–Æ–°–ï–†
//actions –û–±—ã—á–Ω—ã–π JS-–æ–±—ä–µ–∫—Ç, —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –ø–æ–ª–µ–º type, —É–∫–∞–∑—ã–≤–∞—é—â–∏–º –Ω–∞ —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è. 
//–ü–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –≤ dispatch 
function changeStore(state = [], actions) {
  switch (actions.type) {
    case "WRITE":
      return [...state, actions.payload];
      break;
    default:
      return state;
  }
}
//–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–æ—Ä
console.log("getState ", store.getState());
//–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–æ—Ä */

//–¥–µ–π—Å—Ç–≤–∏–µ
store.dispatch({ type: "WRITE", payload: "123" });

//–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
// –û–Ω–æ —Ä–∞–≤–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –∏–∑ reducer-–∞ stora-–∞
store.getState();

/* const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
); */
